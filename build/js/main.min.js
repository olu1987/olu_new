function addClass(el, className){
    if (el.classList)
        el.classList.add(className);
    else
        el.className += ' ' + className;
}

function removeClass(el, className){
    if (el.classList)
        el.classList.remove(className);
    else
        el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
}

function hasClass(el, selector) {
    var className = " " + selector + " ";

    if ((" " + el.className + " ").replace(/[\n\t]/g, " ").indexOf(className) > -1) {
        return true;
    }
    return false;
}
var homeModule = {
    init:function(){
        this.loaderContainer = document.querySelector('.loader-container');
        this.fadeContainer = document.querySelector('.fade-out-container');
        this.fadeOutLink = document.querySelectorAll('.fade-out-link');
        this.navButtons = document.querySelectorAll('.home .anchor-link');
        this.notHomeNavButtons = document.querySelectorAll('.not-home .anchor-link');
        this.sideBar = document.getElementById('sidebar');
        this.toggle = document.querySelector('.nav-toggle');
        this.unbinding();
        this.binding();
    },
    binding:function(){
        window.addEventListener('load',this.loader.bind(this));
        for(var i = 0, x = this.fadeOutLink.length; i < x; i++){
            this.fadeOutLink[i].addEventListener('click',this.fadeOutNavigation.bind(this));
        }
        for (var i = 0, x = this.navButtons.length; i < x; i++) {
            this.navButtons[i].addEventListener('click', function (e) {
                e.preventDefault();
                var element = e.currentTarget;
                var buttonId = element.dataset.anchor;
                this.scrollToAnchor(buttonId);
            }.bind(this))
        }
        for(var i = 0, x = this.notHomeNavButtons.length; i < x; i++){
            this.notHomeNavButtons[i].addEventListener('click',this.fadeOutNavigation.bind(this));
        }
    },
    unbinding:function(){
        window.removeEventListener('load',this.loader.bind(this));
        for(var i = 0, x = this.fadeOutLink.length; i < x; i++){
            this.fadeOutLink[i].removeEventListener('click',this.fadeOutNavigation.bind(this));
        }
    },
    loader:function () {
        setTimeout(function(){
            removeClass(this.loaderContainer,'active');
        }.bind(this),500);

        setTimeout(function(){
            addClass(this.loaderContainer,'hidden');
        }.bind(this),1300)
    },
    fadeOutNavigation:function (e) {
        e.preventDefault();
        var element = e.currentTarget;
        removeClass(this.fadeContainer,'hidden');
        setTimeout(function(){
            addClass(this.fadeContainer,'active')
        }.bind(this),100);
        setTimeout(function(){
            window.location.href = element.dataset.link;
        }.bind(this),1300);

    },
    scrollToAnchor: function (aid){
        var aTag = $("#"+ aid);
        $('html,body').animate({scrollTop: aTag.offset().top},'slow');
        removeClass(this.sideBar,'active');
        removeClass(this.toggle,'active');
    },

};

homeModule.init();


// Avoid `console` errors in browsers that lack a console.
(function() {
    var method;
    var noop = function () {};
    var methods = [
        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'
    ];
    var length = methods.length;
    var console = (window.console = window.console || {});

    while (length--) {
        method = methods[length];

        // Only stub undefined methods.
        if (!console[method]) {
            console[method] = noop;
        }
    }
}());

// Place any jQuery/helper plugins in here.

$( document ).ready(function() {
    var graph = function(){

        if(! hasClass(document.body,'home')){
            return;
        }

        var skillRow = document.querySelector(".skills-wrap");

        skillRow ? window.addEventListener('scroll', function () {
            var distance = skillRow.getBoundingClientRect().top;
            if(distance < 320){
                addClass(skillRow, 'active')
            }
            if(distance > 320) {
                removeClass(skillRow, 'active')
            }
        }):false;

    }();


    (function navSideBar() {

        var toggle = document.querySelector('.nav-toggle');

        var sideBar = document.getElementById('sidebar');

        var navButtons = document.querySelectorAll('.nav-sidebar .anchor-link');

        toggle.addEventListener('click',function () {

            if(! hasClass(this,'active')){

                addClass(this,'active');

                addClass(sideBar,'active')

            }else{

                removeClass(this,'active');

                removeClass(sideBar,'active')

            }
        });

    }());

    var header = $('.header');

    header.parallax(
        {imageSrc: 'img/olu-header.jpg', position:'right'
    });

    var about = $('#about');

    about.parallax(
        {imageSrc: 'img/sparks.jpg', position:'right'
        });

});